$modularscale: (
  base: 1em,
  ratio: $augmented-fourth
);

html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

@at-root {

  @viewport {
    width: device-width;
  }
}

body {
  display: flex;
  flex-direction: column;
  min-height: 100%;
  margin: 0;
  font-family: $font-f;
  word-break: break-word;
  background-color: $bg-c;

  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

[tabindex='-1']:focus {
  outline: none !important;
}

[role='button'] {
  cursor: pointer;
}

[type='search']::-webkit-search-decoration {
  appearance: none;
}

a,
button,
[role='button'],
input,
label,
select,
textarea {
  margin: 0;
  touch-action: manipulation;
}

button,
input {
  overflow: visible;
  text-transform: none;
}

button,
html [type='button'],
[type='reset'],
[type='submit'] {
  appearance: button;
}

button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

input[type='date'],
input[type='time'],
input[type='datetime-local'],
input[type='month'] {
  appearance: listbox;
}

textarea {
  overflow: auto;
  resize: vertical;
}

svg {
  fill: currentColor;

  a &,
  button & {
    pointer-events: none;
  }

  &:not(:root) {
    overflow: hidden;
  }
}

img {
  max-width: 100%;
  height: auto;
}

a {

  &[href^='tel:'] {

    @media (min-width: $screen-xl) {
      color: inherit;
      text-decoration: inherit;
      white-space: nowrap;
      pointer-events: none;
    }
  }
}

hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
  border: 0;
  border-top: 1px solid $border-c;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 700;
  color: currentColor;
}

p {
  margin: 0;
  hyphens: auto;
  hyphenate-limit-chars: 6 3 3;
  hyphenate-limit-lines: 2;
  hyphenate-limit-last: always;
  hyphenate-limit-zone: 8%;

  & + & {
    margin-top: 1em;
  }
}

address {
  font-style: normal;
}

ul,
ol {

  ul,
  ol {
    margin-top: 0;
    margin-bottom: 0;
  }
}

li {
  line-height: inherit;
}


ol {
  list-style-type: none;
  counter-reset: section;

  li {

    &::before {
      content: counters(section, '.');
      counter-increment: section;
    }
  }
}

b,
strong {
  font-weight: bolder;
}

blockquote {
  padding: 0;
  margin-right: 0;
  margin-left: 0;
}
